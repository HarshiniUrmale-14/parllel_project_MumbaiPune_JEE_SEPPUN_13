package com.capgemini.hibernate.controller;

import java.util.List;
import java.util.Scanner;

import com.capgemini.hibernate.beans.AdminBean;
import com.capgemini.hibernate.beans.ProductBean;
import com.capgemini.hibernate.dao.AdminDao;
import com.capgemini.hibernate.dao.Dao;
import com.capgemini.hibernate.factory.Factory;
import com.capgemini.hibernate.validation.CustomValidationDao;
import com.capgemini.hibernate.validation.ValidationDao;

public class AdminTest {
	public static void admin() {
		int adminId = 0;
		ValidationDao vali = Factory.getValImplInstance();
		CustomValidationDao customVali = Factory.getCustomValImplInstance();
		Dao dao1 = Factory.getDAOImplInstance();
		AdminDao dao = Factory.getAdminDAOImplInstance();
		Scanner scan = new Scanner(System.in);
		System.out.println("ENTER THE EMAIL");
		String emailId = scan.nextLine();
		if (customVali.checkAdminEmail(emailId)) {
			System.out.println("ENTER THE PASSWORD");
			String password = scan.nextLine();
			adminId = dao.adminLogin(emailId, password);
			if (adminId != 0) {

				System.out.println("LOGGED IN SUCCESSFULLY");
			} else {
				System.out.println("PASSWORD IS INVALID");
			}

		} else {
			System.err.println("THIS EMAIL ID DOES NOT EXIST");
		}
		while (adminId != 0) {
			System.out.println("ENTER 1 TO VIEW THE PRODUCT ");
			System.out.println("ENTER 2 TO ADD THE PRODUCT ");
			System.out.println("ENTER 3 TO UPDATE THE PRODUCT ");
			System.out.println("ENTER 4 TO DELETE THE PRODUCT ");
			System.out.println("ENTER 5 TO SEE THE USER");
			System.out.println("ENTER 6 TO DELETE THE USER");
			System.out.println("ENTER 7 TO SEE THE MESSAGE FROM USER");
			System.out.println("ENTER 8 TO GIVE REPLY TO USER");
			System.out.println("ENTER 9 TO LOGOUT");
			String button = scan.nextLine();
			switch (button) {
			case "1": {
				System.out.println("HERE ARE THE PRODUCTS");
				List<ProductBean> list = dao1.getProducts();
				if (list != null) {
					for (ProductBean user : list) {
						System.out.println("PRODUCT ID IS   :" + user.getProductId());
						System.out.println("PRODUCT CATEGORY IS  :" + user.getProductCategory());
						System.out.println("PRODUCT NAME IS  :" + user.getProductName());
						System.out.println("PRODUCT PRICE IS   :" + user.getProductPrice());
						System.out.println("NO OF PRODUCT QUANTITY PRESENT IS  :" + user.getProductQuantity());
						System.out.println("--------------------------------------------------------------");

					}
				} else {
					System.out.println("SOMETHING WENT WRONG");

				}
				break;
			}
			case "2": {
				boolean check = false;
				do {
					System.out.println(" ENTER THE PRODUCT CATEGORY");
					String productCategory = scan.nextLine();
					if (vali.validationProductCategory(productCategory)) {
						System.out.println("ENTER THE PRODUCT NAME ");
						String productName = scan.nextLine();
						if (!customVali.checkProductName(productName)) {
							if (vali.validationProductName(productName)) {
								double price = 0;
								try {
									System.out.println("ENTER THE PRODUCT PRICE ");
									price = Double.parseDouble(scan.nextLine());

									System.out.println("ENTER THE PRODUCT QUANTITY AVAILABLE");
									int quantity = Integer.parseInt(scan.nextLine());

									dao.insertProduct(productCategory, productName, price, quantity);
									check = true;
								} catch (NumberFormatException e) {
									System.err.println("ENTER NUMBER ONLY");
								}
								} else {

								System.err.println("PRODUCT NAME ALREADY EXIST");
								}
						}
						else {
							System.out.println("ENTER CHARACTERS AND IF NECESSARY NUMBERS");
						}

					} else {
						System.out.println("PRODUCT CATEGORY SHOULD ONLY BE CHARACTERS");
					}

				} while (!check);
				break;

			}
			case "3": {
				try {
					System.out.println("ENTER THE ID OF PRODUCT TO BE UPDATED");
					int productId = Integer.parseInt(scan.nextLine());
					if (customVali.checkProductId(productId)) {

						dao.updateProduct(productId);
					} else {
						System.err.println("PRODUCT ID DOES NOT EXIST");
					}

				} catch (NumberFormatException e) {
					System.err.println("ENTER ONLY NUMBER");
				}
				break;
			}

			case "4": {
				try {
					System.out.println("ENTER THE PRODUCT ID ");
					int productId = Integer.parseInt(scan.nextLine());
					if (customVali.checkProductId(productId)) {
						dao.deleteProduct(productId);

					} else {
						System.err.println("PRODUCT ID DOES NOT EXIST");
					}
				} catch (NumberFormatException e) {
					System.err.println("ENTER NUMBER ONLY");
				}

				break;
			}
			case "5": {
				System.out.println("HERE IS THE USER LIST ");
				dao.getUser();
				break;
			}
			case "6": {
				System.out.println("ENTER THE ID OF USER TO BE DELETED");
				try {
					int userId = Integer.parseInt(scan.nextLine());
					if (customVali.checkUserId(userId)) {
						System.out.println("................................");
						dao.deleteUser(userId);

					} else {
						System.err.println("USER ID IS NOT PRESENT");
					}
				} catch (NumberFormatException e) {
					System.err.println("ENTER ONLY NUMBER");
				}

				break;
			}
			case "7": {
				dao.seeRequest();
				break;
			}
			case "8": {
				dao.sendReply();
				break;
			}

			case "9": {
				System.out.println("YOU ARE LOGGED OUT");
				System.exit(0);
				break;
			}
			default: {
				System.out.println("...............................................");
				System.err.println("ENTER THE BUTTON BETWEEN 0 TO 9");
				System.out.println("...............................................");
			}
			}

		}
	}
}
